### TomCat Web Server listening port
server.port = 8080

### Database properties
# Enabling console for debug purposes
spring.h2.console.enabled=true
spring.h2.console.path=/h2

#H2 Database settings
spring.datasource.url=jdbc:h2:file:./blog_database;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.platform=h2
#SQL files for DB on initialization
spring.datasource.schema=classpath:/sql/schema.sql
spring.datasource.data=classpath:/sql/data.sql 
#spring.jpa.generate-ddl=false UNUSED


spring.profiles.active=dev
#Database initialization settings, Update will the SQL schema if necessary and not replace or destroy any date.
spring.jpa.hibernate.ddl-auto=update


### Thymeleaf settings
spring.thymeleaf.cache=false
# Check that the template exists before rendering it.
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true

# Enable Thymeleaf
spring.thymeleaf.enabled=true
# Prefix is used to get the templates (HTML files) for the program.
spring.thymeleaf.prefix=classpath:./templates/

# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

#Fixes possible encoding problems that could arrise when reading the SQL Fiel.
spring.datasource.sql-script-encoding=UTF-8


# Log the SQL queries
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=trace
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Set the levels of loggers
logging.level.org.springframework.web=info
logging.level.org.hibernate=info

# Logging levels for Web and SQL
logging.level.web=debug
logging.level.sql=debug

# print the SQL queries
spring.jpa.properties.hibernate.format_sql=true

# security settings
spring.jpa.open-in-view=false
# Setting that allows file uploads
spring.servlet.multipart.enabled=true
